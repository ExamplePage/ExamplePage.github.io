{"version":3,"sources":["history.js","reducers/postsReducer.js","reducers/authReducer.js","reducers/index.js","actions/types.js","store.js","components/Home.js","config.js","components/Header.js","actions/authAction.js","components/PostPreview.js","components/AddPost.js","actions/postsAction.js","components/Login.js","components/Search.js","components/News.js","App.js","serviceWorker.js","index.js"],"names":["createHistory","previewInitialState","inputs","title","email","text","canShow","initialState","posts","allPosts","filtredPosts","preview","Object","objectSpread","filters","search","loggedIn","username","combineReducers","state","arguments","length","undefined","action","type","toConsumableArray","concat","payload","defineProperty","name","value","_loop","f","filter","el","indexOf","v","_ret","filter_name","auth","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","apply","Home","react_default","a","createElement","this","props","Component","connect","config","password","Header","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isOpen","toggle","bind","assertThisInitialized","setState","Router","history","reactstrap_es","color","light","expand","style","marginBottom","Link","fontWeight","fontSize","to","onClick","navbar","className","padding","cursor","logout","dispatch","push","PostPreview","viewMod","slice","margin","xs","sm","top","width","src","file","alt","AddPost","submitForm","e","preventDefault","addPost","assign","onSubmit","for","id","placeholder","required","onChange","onPreviewInputChange","accept","togglePreviewVisibility","PostPreview_PostPreview","data","_ref","asyncToGenerator","regenerator_default","mark","_callee","reader","wrap","_context","prev","next","target","FileReader","onload","result","readAsDataURL","files","abrupt","stop","_x","Login","loginSubmit","onInputChange","login","alert","Search","data-filter-name","onFilterChange","dataset","filterName","News","map","i","editTask","key","components_Search","App","react_redux_es","components_Header","Switch","Route","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f971c34f.chunk.js","sourcesContent":["import createHistory from \"history/createBrowserHistory\";\r\n\r\nexport default createHistory();","import {\r\n    ADD_POST,\r\n    TOGGLE_PREVIEW_VISIBILITY,\r\n    PREVIEW_INPUT_CHANGE,\r\n    FILTER_CHANGE,\r\n    FILTER_POSTS\r\n} from '../actions/types'\r\n\r\nconst previewInitialState = {\r\n    inputs: {\r\n        title: \"\",\r\n        email: \"\",\r\n        text: \"\"\r\n    },\r\n    canShow: false\r\n};\r\n\r\nconst initialState = {\r\n    posts: {\r\n        allPosts: [],\r\n        filtredPosts: [],\r\n        preview: { ...previewInitialState },\r\n        filters: {\r\n            search: \"\"\r\n        }\r\n    }\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: {\r\n                    ...state.posts,\r\n                    allPosts: [\r\n                        ...state.posts.allPosts,\r\n                        {\r\n                            ...action.payload\r\n                        },\r\n                    ],\r\n                    preview: { ...previewInitialState }\r\n                },\r\n            }\r\n\r\n        case TOGGLE_PREVIEW_VISIBILITY:\r\n            return {\r\n                ...state,\r\n                posts: {\r\n                    ...state.posts,\r\n                    preview: {\r\n                        ...state.posts.preview,\r\n                        canShow: !state.posts.preview.canShow\r\n                    }\r\n                }\r\n            };\r\n        case PREVIEW_INPUT_CHANGE:\r\n            return {\r\n                ...state,\r\n                posts: {\r\n                    ...state.posts,\r\n                    preview: {\r\n                        ...state.posts.preview,\r\n                        inputs: {\r\n                            ...state.posts.preview.inputs,\r\n                            [action.payload.name]: action.payload.value\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n        case FILTER_POSTS:\r\n            for (let f in state.posts.filters) {\r\n                switch (f) {\r\n                    case \"search\":\r\n                        let allPosts = [...state.posts.allPosts];\r\n                        let filtredPosts;\r\n                        if (state.posts.filters[f] === \"\") {\r\n                            filtredPosts = allPosts;\r\n                        } else {\r\n                            filtredPosts = allPosts.filter(el => {\r\n                                return el.title.indexOf(state.posts.filters[f]) >= 0;\r\n                            });\r\n                        }\r\n\r\n                        return {\r\n                            ...state,\r\n                            posts: {\r\n                                ...state.posts,\r\n                                filtredPosts\r\n                            }\r\n                        }\r\n                    default:\r\n                        return { ...state }\r\n                }\r\n            }\r\n            break;\r\n        case FILTER_CHANGE:\r\n            return {\r\n                ...state,\r\n                posts: {\r\n                    ...state.posts,\r\n                    filters: {\r\n                        ...state.posts.filters,\r\n                        [action.payload.filter_name]: action.payload.value\r\n                    }\r\n                }\r\n            }\r\n    }\r\n}","import { LOGIN, LOGOUT } from '../actions/types';\r\n\r\nconst initialState = {\r\n    loggedIn: false,\r\n    username: ''\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case LOGIN:\r\n            return {\r\n                ...state,\r\n                loggedIn: true,\r\n                username: action.payload.username\r\n            }\r\n        case LOGOUT:\r\n            return {\r\n                ...state,\r\n                loggedIn: false,\r\n                username: ''\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport postsReducer from './postsReducer'\r\nimport authReducer from './authReducer'\r\n\r\nexport default combineReducers({\r\n    posts: postsReducer,\r\n    auth: authReducer\r\n});","export const UPDATE_POST = 'UPDATE_TASK';\r\nexport const ADD_POST = 'ADD_TASK';\r\nexport const TOGGLE_PREVIEW_VISIBILITY = 'TOGGLE_PREVIEW_VISIBILITY';\r\nexport const PREVIEW_INPUT_CHANGE = 'PREVIEW_INPUT_CHANGE';\r\nexport const FILTER_CHANGE = 'FILTER_CHANGE';\r\nexport const FILTER_POSTS = 'FILTER_POSTS';\r\n\r\n\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState, \r\n    composeWithDevTools (\r\n        applyMiddleware(...middleware)\r\n    )\r\n);\r\n\r\nexport default store;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Hello, {(this.props.auth.username ? this.props.auth.username : \"Guest\" )}!</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: { ...state.auth }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(Home);","const config = {\r\n    auth: {\r\n        username: 'admin',\r\n        password: '123'\r\n    }\r\n}\r\n\r\nexport default config;","import React, { Component } from 'react'\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    Nav,\r\n    NavItem,\r\n    Container\r\n} from 'reactstrap'\r\nimport { Router, Link } from 'react-router-dom'\r\nimport history from '../history';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { logout } from '../actions/authAction'\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isOpen: false,\r\n        };\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    /**\r\n     * This function came from reactstrap documentation\r\n     * Workd in mobile scrins, to hide the menu\r\n     */\r\n    toggle() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router history={history}>\r\n                    <Navbar color=\"light\" light expand=\"md\" style={{ marginBottom: \"50px\" }}>\r\n                        <Container>\r\n                            <Link style={{\r\n                                fontWeight: 'bold',\r\n                                fontSize: '22px'\r\n                            }} to=\"/\">React Test Task</Link>\r\n                            \r\n                            <NavbarToggler onClick={this.toggle} />\r\n                            <Collapse isOpen={this.state.isOpen} navbar>\r\n                                <Nav className=\"ml-auto\" navbar>\r\n                                    <NavItem style={{\r\n                                        fontSize: '18px',\r\n                                        padding: '0 10px'\r\n                                    }}>\r\n                                        <Link to=\"/news/\">News</Link>\r\n                                    </NavItem>\r\n                                    <NavItem style={{\r\n                                        fontSize: '18px',\r\n                                        padding: '0 10px'\r\n                                    }}>\r\n                                        <Link to=\"/addPost/\">Add Post</Link>\r\n                                    </NavItem>\r\n                                    \r\n                                    {/* Templates for authinticated users and not */}\r\n                                    {(!this.props.auth.loggedIn) ? (\r\n                                        <NavItem style={{\r\n                                            fontSize: '18px',\r\n                                            padding: '0 10px'\r\n                                        }}>\r\n                                            <Link to=\"/login/\">Log In</Link>\r\n                                        </NavItem>\r\n                                    ) : (\r\n                                            <div>\r\n                                                <NavItem style={{\r\n                                                    fontSize: '18px',\r\n                                                    padding: '0 10px'\r\n                                                }}>\r\n                                                    {this.props.auth.username}\r\n                                                </NavItem>\r\n                                                <NavItem style={{\r\n                                                    fontSize: '18px',\r\n                                                    padding: '0 10px',\r\n                                                    cursor: 'pointer'\r\n                                                }} onClick={this.props.logout}>\r\n                                                    Log out\r\n                                                </NavItem>\r\n                                            </div>\r\n                                        )}\r\n                                </Nav>\r\n                            </Collapse>\r\n                        </Container>\r\n                    </Navbar>\r\n                </Router>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: { ...state.auth }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);","import { LOGIN, LOGOUT } from './types'\r\n\r\nimport history from '../history'\r\nimport config from '../config'\r\n\r\nexport const login = (data) => (dispatch) => {\r\n    if(data.username === config.auth.username && data.password === config.auth.password) {\r\n        dispatch({\r\n            type: LOGIN,\r\n            payload: {\r\n                username: data.username\r\n            }\r\n        });\r\n\r\n        history.push('/');\r\n    } else {\r\n        alert('Login or password is incorrect! Try again.');\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    });\r\n\r\n    history.push('/');\r\n}","import React, { Component } from 'react'\r\nimport {\r\n    Card, CardImg, CardText, CardBody, CardSubtitle,\r\n    Row, Col\r\n} from 'reactstrap'\r\n\r\nexport default class PostPreview extends Component {\r\n    render() {\r\n        const el = this.props.el;\r\n\r\n        // If the task not in edit state, he will see this template\r\n        const viewMod = (\r\n            <CardBody>\r\n                <CardSubtitle>Title: {el.title}</CardSubtitle>\r\n                <br />\r\n                <CardSubtitle>Author Email: {el.email}</CardSubtitle>\r\n                <br />\r\n\r\n                <CardText>Text: {el.text.slice}</CardText>\r\n            </CardBody>\r\n        );\r\n\r\n        return (\r\n            <Card style={{ margin: \"40px auto\" }}>\r\n                <Row>\r\n                    <Col xs=\"12\" sm=\"4\">\r\n                        <CardImg top width=\"100%\" src={el.file} alt=\"Card image cap\" />\r\n                    </Col>\r\n                    <Col xs=\"12\" sm=\"8\">\r\n                        {viewMod}\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, FormGroup, Label, Input, Button, Container } from 'reactstrap'\r\nimport { addPost, togglePreviewVisibility, onPreviewInputChange } from '../actions/postsAction'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nimport PostPreview from './PostPreview'\r\n\r\nclass AddPost extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            preview: {\r\n                canShow: false,\r\n            }\r\n        }\r\n\r\n        this.submitForm = this.submitForm.bind(this);\r\n    }\r\n    \r\n    /** \r\n     * Async function\r\n     * Resizes image usgin config params\r\n     * And then calls action 'addPost'\r\n     */\r\n    async submitForm(e) {\r\n        e.preventDefault();\r\n\r\n        this.props.addPost(Object.assign({}, this.props.posts.preview.inputs));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Form onSubmit={this.submitForm}>\r\n                        <FormGroup>\r\n                            <Label for=\"title\">Title</Label>\r\n                            <Input type=\"text\" name=\"title\" id=\"title\" \r\n                                   value={this.props.posts.preview.inputs.title} \r\n                                   placeholder=\"Title\" required onChange={this.props.onPreviewInputChange} />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"email\">Email</Label>\r\n                            <Input type=\"email\" name=\"email\" id=\"email\"\r\n                                   value={this.props.posts.preview.inputs.email} \r\n                                   placeholder=\"Your Email\" required onChange={this.props.onPreviewInputChange} />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"image\">Image</Label>\r\n                            <Input type=\"file\" name=\"file\" id=\"image\" accept=\".png, .jpg, .jpeg .gif\" \r\n                                onChange={this.props.onPreviewInputChange} required />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"text\">Text</Label>\r\n                            <Input type=\"textarea\" name=\"text\" id=\"text\" required\r\n                                   value={this.props.posts.preview.inputs.text}\r\n                                   onChange={this.props.onPreviewInputChange} />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Button style={{ width: '100%' }}>Submit</Button>\r\n                        </FormGroup>\r\n                    </Form>\r\n\r\n                    <FormGroup>\r\n                        <Button style={{ width: '100%' }} onClick={this.props.togglePreviewVisibility}>Preview</Button>\r\n                    </FormGroup>\r\n\r\n                    {this.props.posts.preview.canShow && (\r\n                        <div className=\"preview\">\r\n                            <PostPreview el={this.props.posts.preview.inputs} />\r\n                        </div>\r\n                    )}\r\n                </Container>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        posts: { ...state.posts.posts }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { addPost, togglePreviewVisibility, onPreviewInputChange })(AddPost);","import {\r\n    ADD_POST,\r\n    TOGGLE_PREVIEW_VISIBILITY,\r\n    PREVIEW_INPUT_CHANGE,\r\n    FILTER_CHANGE,\r\n    FILTER_POSTS\r\n} from './types'\r\n\r\nimport history from '../history';\r\n\r\n/**\r\n * Add the Task\r\n * \r\n * @param {FormData} formData Task data\r\n * @return {Void}\r\n */\r\nexport const addPost = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: ADD_POST,\r\n        payload: data\r\n    });\r\n    dispatch({\r\n        type: FILTER_POSTS\r\n    });\r\n    history.push(\"/news\");\r\n}\r\n\r\n/**\r\n * Toggles the state of preview visibility\r\n */\r\nexport const togglePreviewVisibility = () => (dispatch) => {\r\n    dispatch({\r\n        type: TOGGLE_PREVIEW_VISIBILITY\r\n    })\r\n}\r\n\r\n/**\r\n * Changes input values in state when input changes\r\n * @param {Object} e \r\n */\r\nexport const onPreviewInputChange = (e) => async (dispatch) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n\r\n    if (name === 'file') {\r\n        var reader = new FileReader();\r\n        \r\n        reader.onload = function (e) {\r\n            dispatch({\r\n                type: PREVIEW_INPUT_CHANGE,\r\n                payload: {\r\n                    name,\r\n                    value: e.target.result\r\n                }\r\n            })\r\n        }\r\n\r\n        value = reader.readAsDataURL(e.target.files[0]);\r\n        return;\r\n    }\r\n\r\n    dispatch({\r\n        type: PREVIEW_INPUT_CHANGE,\r\n        payload: {\r\n            name,\r\n            value\r\n        }\r\n    })\r\n}\r\n\r\n/**\r\n * Changes filter data\r\n */\r\nexport const onFilterChange = (e) => (dispatch) => {\r\n    const value = e.target.value;\r\n    const filter_name = e.target.dataset.filterName;\r\n    dispatch({\r\n        type: FILTER_CHANGE,\r\n        payload: {\r\n            value,\r\n            filter_name\r\n        }\r\n    });\r\n    dispatch({\r\n        type: FILTER_POSTS\r\n    });\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, FormGroup, Label, Input, Button, Container } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { login } from '../actions/authAction'\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        };\r\n\r\n        this.loginSubmit = this.loginSubmit.bind(this);\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Login form submit handler\r\n     * Calls auth action, particularly 'login' \r\n     * @param {Object} e \r\n     */\r\n    loginSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        this.props.login({ username: this.state.username, password: this.state.password });\r\n\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Changes the values in state when input changes\r\n     * @param {Object} e \r\n     */\r\n    onInputChange(e) {\r\n        const name = e.target.name;\r\n\r\n        this.setState({\r\n            [name]: e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Form onSubmit={this.loginSubmit}>\r\n                        <FormGroup>\r\n                            <Label for=\"username\">Name</Label>\r\n                            <Input onChange={this.onInputChange} type=\"text\" name=\"username\" id=\"username\" placeholder=\"Name\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"password\">Password</Label>\r\n                            <Input onChange={this.onInputChange} type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\" />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Button>Login</Button>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, { login })(Login);","import React, { Component } from 'react'\r\nimport {\r\n    InputGroup,\r\n    Input,\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux'\r\nimport { onFilterChange } from '../actions/postsAction'\r\n\r\nclass Search extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <InputGroup>\r\n                    <Input placeholder=\"Search line\" data-filter-name=\"search\" onChange={this.props.onFilterChange}/>\r\n                </InputGroup>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        posts: { ...state.posts.posts }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { onFilterChange })(Search);","import React, { Component } from 'react'\r\nimport { Container } from 'reactstrap'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport PostPreview from './PostPreview'\r\nimport Search from './Search'\r\n\r\nclass News extends Component {\r\n    render() {\r\n        let posts = this.props.posts.filtredPosts.map((el, i) => (\r\n            <PostPreview editTask={this.props.editTask} auth={this.props.auth} key={i} el={el} />\r\n        ));\r\n\r\n        if(posts.length === 0) {\r\n            posts.push(\r\n                <h1 key=\"1\">There is no post yet!</h1>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Search />\r\n                    {posts}\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        posts: { ...state.posts.posts },\r\n        auth: { ...state.auth }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {  })(News);","import React, { Component } from 'react'\nimport './App.css'\n\nimport { Router, Route, Switch } from 'react-router-dom';\n\n// History for router\nimport history from './history';\n\n// Store for redux\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nimport Home from './components/Home'\nimport Header from './components/Header'\nimport AddPost from './components/AddPost'\nimport Login from './components/Login'\nimport News from './components/News'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <Header />\n\n          <Router history={history}>\n            <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/news\" exact component={News} />\n              <Route path=\"/addPost\" exact component={AddPost} />\n              <Route path=\"/login\" exact component={Login} />\n            </Switch>\n          </Router>\n\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Adding bootstrap styles\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}